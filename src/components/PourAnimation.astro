---
export interface Props {
  className?: string;
  autoPlay?: boolean;
  trigger?: 'hover' | 'scroll' | 'auto';
}

const { 
  className = '',
  autoPlay = false,
  trigger = 'scroll'
} = Astro.props;
---

<div class={`pour-container ${className}`} data-trigger={trigger}>
  <div class="beer-glass">
    <div class="glass-body">
      <div class="liquid-fill"></div>
      <div class="foam-layer"></div>
      <div class="pour-stream"></div>
    </div>
    <div class="glass-base"></div>
  </div>
  
  <div class="pour-source">
    <div class="tap-handle"></div>
    <div class="liquid-stream"></div>
  </div>
  
  <!-- Particle effects -->
  <div class="droplets">
    <div class="droplet" style="--delay: 0s; --x: 10px;"></div>
    <div class="droplet" style="--delay: 0.2s; --x: -5px;"></div>
    <div class="droplet" style="--delay: 0.4s; --x: 8px;"></div>
    <div class="droplet" style="--delay: 0.6s; --x: -3px;"></div>
    <div class="droplet" style="--delay: 0.8s; --x: 12px;"></div>
  </div>
</div>

<style>
  .pour-container {
    position: relative;
    width: 300px;
    height: 400px;
    margin: 0 auto;
    overflow: visible;
  }

  .beer-glass {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 120px;
    height: 180px;
  }

  .glass-body {
    position: relative;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(255, 255, 255, 0.1) 100%
    );
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 0 0 20px 20px;
    border-top: none;
    overflow: hidden;
    backdrop-filter: blur(5px);
  }

  .glass-base {
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 20px;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.1)
    );
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }

  .liquid-fill {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0%;
    background: linear-gradient(
      to top,
      #490000 0%,
      #e90000 40%,
      #490000 100%
    );
    transition: height 3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    border-radius: 0 0 17px 17px;
  }

  .foam-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.9) 0%,
      rgba(255, 255, 255, 0.6) 50%,
      rgba(255, 255, 255, 0.3) 100%
    );
    opacity: 0;
    transition: all 2s ease;
    border-radius: 0 0 17px 17px;
  }

  .pour-source {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 100px;
  }

  .tap-handle {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 40px;
    height: 60px;
    background: linear-gradient(
      135deg,
      #4b4b01 0%,
      #bbff00 50%,
      #4b4b01 100%
    );
    border-radius: 20px 20px 5px 5px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    box-shadow: 
      0 0 20px rgba(187, 255, 0, 0.3),
      inset 0 0 10px rgba(0, 0, 0, 0.3);
  }

  .liquid-stream {
    position: absolute;
    top: 50px;
    left: 50%;
    transform: translateX(-50%);
    width: 8px;
    height: 0;
    background: linear-gradient(
      to bottom,
      #e90000 0%,
      #490000 50%,
      #e90000 100%
    );
    border-radius: 0 0 50% 50%;
    opacity: 0;
    transition: all 1s ease;
    box-shadow: 
      0 0 10px rgba(233, 0, 0, 0.5),
      0 0 20px rgba(233, 0, 0, 0.3);
  }

  .droplets {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .droplet {
    position: absolute;
    top: 120px;
    left: calc(50% + var(--x));
    width: 4px;
    height: 8px;
    background: radial-gradient(
      ellipse at top,
      #e90000 0%,
      #490000 100%
    );
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    opacity: 0;
    animation: droplet-fall 1.5s ease-in infinite;
    animation-delay: var(--delay);
  }

  @keyframes droplet-fall {
    0% {
      opacity: 0;
      transform: translateY(0) scale(1);
    }
    10% {
      opacity: 1;
      transform: translateY(10px) scale(0.9);
    }
    90% {
      opacity: 1;
      transform: translateY(200px) scale(0.8);
    }
    100% {
      opacity: 0;
      transform: translateY(220px) scale(0.6);
    }
  }

  /* Animation States */
  .pour-container.pouring .liquid-stream {
    height: 140px;
    opacity: 1;
  }

  .pour-container.pouring .liquid-fill {
    height: 60%;
  }

  .pour-container.pouring .foam-layer {
    height: 15px;
    opacity: 1;
  }

  .pour-container.pouring .droplet {
    animation-play-state: running;
  }

  /* Glitch effects during pour */
  .pour-container.pouring {
    animation: pour-glitch 0.5s ease-in-out infinite;
  }

  @keyframes pour-glitch {
    0% {
      filter: hue-rotate(0deg) contrast(1);
    }
    10% {
      filter: hue-rotate(15deg) contrast(1.1);
    }
    20% {
      filter: hue-rotate(-10deg) contrast(0.9);
    }
    30% {
      filter: hue-rotate(20deg) contrast(1.2);
    }
    40% {
      filter: hue-rotate(-5deg) contrast(0.8);
    }
    50% {
      filter: hue-rotate(10deg) contrast(1.3);
    }
    60% {
      filter: hue-rotate(-15deg) contrast(1.1);
    }
    70% {
      filter: hue-rotate(5deg) contrast(0.9);
    }
    80% {
      filter: hue-rotate(-8deg) contrast(1.1);
    }
    90% {
      filter: hue-rotate(12deg) contrast(1.05);
    }
    100% {
      filter: hue-rotate(0deg) contrast(1);
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .pour-container {
      width: 200px;
      height: 300px;
    }
    
    .beer-glass {
      width: 80px;
      height: 120px;
    }
    
    .pour-source {
      width: 40px;
      height: 80px;
    }
    
    .tap-handle {
      width: 30px;
      height: 40px;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .pour-container,
    .droplet {
      animation: none;
    }
    
    .liquid-fill,
    .foam-layer,
    .liquid-stream {
      transition: none;
    }
  }
</style>

<script>
  class PourAnimation {
    constructor(element: HTMLElement) {
      this.element = element;
      this.trigger = element.dataset.trigger || 'scroll';
      this.isPouring = false;
      this.init();
    }

    private element: HTMLElement;
    private trigger: string;
    private isPouring: boolean;

    init() {
      if (this.trigger === 'scroll') {
        this.setupScrollTrigger();
      } else if (this.trigger === 'hover') {
        this.setupHoverTrigger();
      } else if (this.trigger === 'auto') {
        this.setupAutoTrigger();
      }
    }

    private setupScrollTrigger() {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting && !this.isPouring) {
              this.startPouring();
            }
          });
        },
        { threshold: 0.5 }
      );

      observer.observe(this.element);
    }

    private setupHoverTrigger() {
      this.element.addEventListener('mouseenter', () => {
        if (!this.isPouring) {
          this.startPouring();
        }
      });

      this.element.addEventListener('mouseleave', () => {
        this.stopPouring();
      });
    }

    private setupAutoTrigger() {
      setTimeout(() => {
        this.startPouring();
      }, 1000);
    }

    private startPouring() {
      if (this.isPouring) return;
      
      this.isPouring = true;
      this.element.classList.add('pouring');

      // Add subtle screen shake
      document.body.style.animation = 'subtle-shake 0.1s infinite';

      // Stop after 4 seconds
      setTimeout(() => {
        this.stopPouring();
      }, 4000);
    }

    private stopPouring() {
      this.isPouring = false;
      this.element.classList.remove('pouring');
      document.body.style.animation = '';
    }
  }

  // Add shake animation to body
  const shakeStyles = document.createElement('style');
  shakeStyles.textContent = `
    @keyframes subtle-shake {
      0% { transform: translateX(0); }
      25% { transform: translateX(-0.5px); }
      50% { transform: translateX(0); }
      75% { transform: translateX(0.5px); }
      100% { transform: translateX(0); }
    }
  `;
  document.head.appendChild(shakeStyles);

  // Initialize pour animations
  document.addEventListener('DOMContentLoaded', () => {
    const pourContainers = document.querySelectorAll<HTMLElement>('.pour-container');
    pourContainers.forEach(container => {
      new PourAnimation(container);
    });
  });

  // Re-initialize on page transitions
  document.addEventListener('astro:page-load', () => {
    const pourContainers = document.querySelectorAll<HTMLElement>('.pour-container');
    pourContainers.forEach(container => {
      new PourAnimation(container);
    });
  });
</script>