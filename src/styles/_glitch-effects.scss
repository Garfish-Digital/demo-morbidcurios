@import 'variables';

// Sophisticated Glitch Transition Effects
@keyframes glitch-horizontal {
  0% {
    transform: translateX(0);
    filter: hue-rotate(0deg);
  }
  15% {
    transform: translateX(-$glitch-intensity);
    filter: hue-rotate(90deg);
  }
  30% {
    transform: translateX($glitch-intensity);
    filter: hue-rotate(180deg);
  }
  45% {
    transform: translateX(-$glitch-intensity * 0.5);
    filter: hue-rotate(270deg);
  }
  60% {
    transform: translateX($glitch-intensity * 0.3);
    filter: hue-rotate(360deg);
  }
  75% {
    transform: translateX(-$glitch-intensity * 0.2);
    filter: hue-rotate(45deg);
  }
  100% {
    transform: translateX(0);
    filter: hue-rotate(0deg);
  }
}

@keyframes distortion-screech {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    transform: scaleY(1);
  }
  10% {
    clip-path: polygon(0 20%, 100% 0, 100% 80%, 0 100%);
    transform: scaleY(0.8);
  }
  20% {
    clip-path: polygon(0 0, 100% 30%, 100% 70%, 0 100%);
    transform: scaleY(1.1);
  }
  30% {
    clip-path: polygon(0 15%, 100% 0, 100% 85%, 0 100%);
    transform: scaleY(0.9);
  }
  40% {
    clip-path: polygon(0 0, 100% 25%, 100% 75%, 0 100%);
    transform: scaleY(1.05);
  }
  50% {
    clip-path: polygon(0 10%, 100% 0, 100% 90%, 0 100%);
    transform: scaleY(0.95);
  }
  100% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    transform: scaleY(1);
  }
}

@keyframes ct-scanlines {
  0% {
    background-position: 0 0;
    opacity: 0.8;
  }
  100% {
    background-position: 0 100px;
    opacity: 0.3;
  }
}

@keyframes broken-monitor {
  0% {
    filter: blur(0px) contrast(1) brightness(1);
  }
  10% {
    filter: blur(2px) contrast(1.5) brightness(0.8);
  }
  20% {
    filter: blur(0px) contrast(0.8) brightness(1.2);
  }
  30% {
    filter: blur(1px) contrast(1.2) brightness(0.9);
  }
  40% {
    filter: blur(3px) contrast(0.6) brightness(1.1);
  }
  50% {
    filter: blur(0px) contrast(1.8) brightness(0.7);
  }
  60% {
    filter: blur(2px) contrast(1.1) brightness(1.3);
  }
  70% {
    filter: blur(0px) contrast(0.9) brightness(0.8);
  }
  80% {
    filter: blur(1px) contrast(1.4) brightness(1.1);
  }
  90% {
    filter: blur(0px) contrast(1.1) brightness(0.9);
  }
  100% {
    filter: blur(0px) contrast(1) brightness(1);
  }
}

@keyframes color-shift {
  0% {
    filter: hue-rotate(0deg) saturate(1);
  }
  25% {
    filter: hue-rotate(90deg) saturate(1.5);
  }
  50% {
    filter: hue-rotate(180deg) saturate(0.8);
  }
  75% {
    filter: hue-rotate(270deg) saturate(1.2);
  }
  100% {
    filter: hue-rotate(360deg) saturate(1);
  }
}

// Glitch Classes
.glitch-transition {
  animation: glitch-horizontal $glitch-duration ease-in-out;
  position: relative;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    z-index: $z-glitch;
    mix-blend-mode: difference;
  }
  
  &::before {
    animation: glitch-horizontal $glitch-duration ease-in-out;
    animation-delay: 0.05s;
    background: $primary-blood;
  }
  
  &::after {
    animation: glitch-horizontal $glitch-duration ease-in-out;
    animation-delay: 0.1s;
    background: $secondary-scream;
  }
}

.distortion-screech {
  animation: distortion-screech 0.8s ease-in-out;
  transform-origin: center;
}

.ct-scanlines {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba($secondary-scream, 0.1) 2px,
      rgba($secondary-scream, 0.1) 4px
    );
    animation: ct-scanlines $scanline-speed linear infinite;
    z-index: $z-scanlines;
    pointer-events: none;
  }
}

.broken-monitor {
  animation: broken-monitor 3s ease-in-out infinite;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      90deg,
      transparent,
      transparent 1px,
      rgba($primary-blood, 0.05) 1px,
      rgba($primary-blood, 0.05) 2px
    );
    z-index: $z-overlay;
    pointer-events: none;
  }
}

.distorted-hover {
  transition: all $transition-fast ease;
  
  &:hover {
    animation: color-shift 0.6s ease-in-out;
    filter: blur(1px) drop-shadow(0 0 10px $primary-blood);
    transform: scale(1.02);
  }
}

// Unsettling Base Effects
.unsettling-glow {
  box-shadow: 
    0 0 20px rgba($primary-blood, 0.3),
    0 0 40px rgba($primary-blood, 0.1),
    inset 0 0 20px rgba($shadow-gray, 0.8);
}

.horror-text {
  text-shadow: 
    0 0 5px $primary-blood,
    0 0 10px $primary-blood,
    0 0 15px $primary-blood,
    0 0 20px $primary-blood;
  filter: drop-shadow(2px 2px 4px rgba($pure-black, 0.8));
}

.flickering {
  animation: broken-monitor 2s ease-in-out infinite;
}

// Displacement and Distortion
.displacement-effect {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
      circle at center,
      rgba($primary-blood, 0.1) 0%,
      transparent 70%
    );
    animation: glitch-horizontal 4s ease-in-out infinite;
    z-index: $z-overlay;
    pointer-events: none;
  }
}

// Mist and Vapor Effects
.mist-effect {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      ellipse at bottom,
      rgba($fog-gray, 0.3) 0%,
      transparent 70%
    );
    animation: ct-scanlines 6s ease-in-out infinite alternate;
    z-index: $z-content;
    pointer-events: none;
  }
}